import random
class Field:
    def __init__(self, size, ships):
        self.ships_alive= ships
        self.size=size
        self.grid=[]
        for i in range(size):
            self.grid.append([None]*size)

    def display(self, show_ships=False):
        letters='ABCDEFGHIJ'
        probel='    '
        for i in letters:
            probel+=i+' '
        print(probel)
        for i, row in enumerate(self.grid):
            display_row = ""
            for cell in row:
                if show_ships==False or cell is None:
                    display_row += "O "
                else:
                    display_row += "■ "
            if i + 1 != 10:
                print(i + 1, " ", display_row)
            else:
                print(i + 1, "", display_row)
class BattleshipGame:
    def __init__(self):
        self.size = 10
        self.ships = 15
        self.player=Field(size=self.size, ships=self.ships)
        self.computer=Field(size=self.size, ships=self.ships)

    # Это функция расстановки кораблей, она уже полностью написана
    def place_ships_randomly(self, field, num_ships):
        for _ in range(num_ships):
            placed = False
            while not placed:
                coords = (random.randint(0, self.size - 1), random.randint(0, self.size - 1))
                if self.is_valid_ship_placement(field, coords):
                    field.grid[coords[0]][coords[1]] = "S"
                    placed = True

    # Это функция проверки расстановки кораблей, она уже полностью написана
    def is_valid_ship_placement(self, field, coords, ship_length=1, ):
        x, y = coords
        for i in range(ship_length + 2):
            for j in range(-1, 2):
                for k in range(-1, 2):
                    new_x, new_y = x + j, y + k
                    if 0 <= new_x < self.size and 0 <= new_y < self.size and field.grid[new_x][new_y] == "S":
                        return False

        return True

    def play(self):
        print("Расстановка кораблей компьютера:")
        self.place_ships_randomly(self.computer, self.ships)
        self.computer.display(show_ships=True)
        print("Ваша расстановка кораблей:")
        self.place_ships_randomly(self.player, self.ships)
        self.player.display(show_ships=True)
        while True:
            x=input('введите координаты X: ')
            y=int(input('Введите координаты Y: '))
            self.player_turn(x, y)
            if self.computer.ships_alive==0:
                print("Вы победили! Все корабли компьютера потоплены.")
                break
            self.computer_turn()
            if self.player.ships_alive==0:
                print("Вы проиграли! Все ваши корабли потоплены.")
                break

    def player_turn(self, x, y):
        x=x.upper()
        x1='ABCDEFGHIJ'.index(x)

        y1= y-1
        if self.computer.grid[y1][x1]=='S':
            print('Вы попали!')
            self.computer.ships_alive-=1
            self.computer.grid[y1][x1]='X'
        else:
            print('Промах!')

    def computer_turn(self):
        x=random.randint(0, self.size-1)
        y=random.randint(0, self.size-1)
        if self.player.grid[y][x]=='S':
            print('Компьютер попал!')
            self.player.ships_alive -= 1
            self.player.grid[y][x] = 'X'
        else:
            print('Компьютер промахнулся!')



game = BattleshipGame()
game.play()
